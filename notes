
- добавить font-awesome при выкладывание на сервер

- после изменeния клиента у задачи, если открыть EditTaskModal то в поле
клиент/исполнитель/ответственный старое значение
	* решил проблему с помощью componentWillRecieveProps
	+ двигается дедлайн
- раз и навсегда разобраться какие компоненты должны общаться с сервисом данных
- добавить лоудеры
- если task попадает в Выполненные или Замороженные колонку, то показывать время
выполнения/заморозки
- добавить сортировку и фильтрацию по авторам в Column
- добавить PropTypes
- createClass deprecated in React v16
- добавить confirm при удалениях
- добавить проверку авторизации для /api роутов
- сделать валидацию на сервере
- пропустил хэширование паролей
- пропустил passport.serializeUser passport.deserializeUser
- не работает показ флагов в телефонном инпуте AddClientModal
- отрефакторить Notify
-----------------------------------------------------Doing---------------------------------------------
-----------------------------------------------------Complete------------------------------------------------
- возможность выставлять приоритет задачи
*добавил priotityView в Card. Сделал его опциональным.
*сделал свойство priority опциональным с помощью checkbox'a. По умолчанию
значение 0.
*фиксанул AddTaskModal и EditTaskModal добавив сброс изменения при закрытии
формы(нужно использовать свойство onExited у Modal компонента)
*на сервере добавил кусок кода в метод task-контроллера addTask(запросы и
сохранения в mongoose асинхронны)
*сделал удаление client свойства, если оно undefined с помощью middleware
.pre('findOneAndUpdate')

- добавить почтовые уведомления
- (1:30) Выдавало ошибку Pleace log in via your web browser and then try again.
Нужно было в гуглу аккаунте
в разделе security, в самом низу включить "Ненадежные приложения разрешены".
- Завести почтовый ящик на gmail'е tasks-manager
- (2:00) Продумать систему отправки писем
- В task есть имя исполнителя и ответственного, но нету их emailов, которые
нужны для отправки писем.
- Есть два решения: в полях executor и responsible хранить id, а потом с
помощью Mongoose populate() заменять их на соотвествующие объекты. Второе
решения - это обращаться в системе отправки писем к БД.
- Явно будут ошибки, если удалять пользователей системы.
- Удалять поля в Mongoose надо item.filed = undefined;
- показывать разные опции взаимодействия с задачей для пользователя. Условием
какие опции показывать, а какие нет - являются роли,
указанные в задачи. Показывать разные списки выбора колонки при перемещении
задачи. Первый вариант для исполнителе: он может переместить задачу в
выполняемые, завершенные, замороженные. Второй вариант для ответственного: он
может переместить только в замороженные.
- при изменении задачи может произойти, например, смена исполнителя. В таком
случае Notify сервис не уведомит старого исполнителя о изменениях.
* Сделал возможным передавать не измененную(original) задачу в метод
Notify.wasTaskEdited.
- возможно можно сократить запросы к серверу, если в дата сервисах сделать
приватное хранилище и менять его
после получения ответов с сервера на запросы, а компоненты будут получать
данные не после цепочки: запрос к сервису - запрос к серверу, а только в
результате обращения к сервису.
- сделать валидацию форм и вывод соответствующих сообщений.
	AddTaskModal(сделал), EditTaskModal, AddClientModal, EditClient, AddUserModal,
	EditUserModal, Login
- после удаления последней task карточка с ней не пропадает. Скорее всего это
происходит в результате невыполненного промиса.
* (2 часа) Коллекция пустая, запрос к контроллеру ничего не возвращал. Я сделал
проверку на колличество элм.
в коллекции (Query.count() , если ноль, то отправлять json с пустым массивом.
- не открывать addTaskModal и показывать соответствующие сообщение, если список
клиентов пустой
* Нет необходимости, так как стало возможным создавать task без указания клиента.
- добавить возможность существование task без поля client
	- происходит ошибка на сервере, mongoose populate()
	- после удаления клиента происходит ошибка: в Card - client.name = undefined
* Все поля в mongoose опциональны, кроме _id. Если метод populate не находит
указанный путь в модели, то он и
ничего и не делает. Задача сделать на клиенте в форме создания task сделать
опциональное поле client.
- в Dropdown меню добавить стиль к .dropdown-title в открытом состоянии
- починил баг Dropdown компонента: из-за того, что dropdown-options заходили
за размер экрана появлялся ненужный скролл при ресайзе.
28.07.17
- на мобильном если открыта колонка и происходит скрол, то колонка нежелательно
закрывается. Возможно дело в ресайзе. Я убрал хендлер с ресайза
- на мобильном появляться ненужный горизонтальный  и вертикальный скрол

На будущее:
- react-validation input type text - меняет числовой тип данных на строковой
- Лучше подбирать библиотеки. В этом проекте я использую react-bootstrap,
react-validation, react-date-picker, хотя, возможно, есть одна библиотека,
в которой есть нужный мне функционал.
- Если какая-то часть данных модели используется другой моделью, то нужно эти
данные передовать по ссылке.
